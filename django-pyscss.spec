#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : django-pyscss
Version  : 2.0.2
Release  : 36
URL      : https://files.pythonhosted.org/packages/4b/7f/d771802305184aac6010826f60a0b2ecaa3f57d19ab0e405f0c8db07e809/django-pyscss-2.0.2.tar.gz
Source0  : https://files.pythonhosted.org/packages/4b/7f/d771802305184aac6010826f60a0b2ecaa3f57d19ab0e405f0c8db07e809/django-pyscss-2.0.2.tar.gz
Summary  : Makes it easier to use PySCSS in Django.
Group    : Development/Tools
License  : BSD-2-Clause
Requires: django-pyscss-license = %{version}-%{release}
Requires: django-pyscss-python = %{version}-%{release}
Requires: django-pyscss-python3 = %{version}-%{release}
Requires: Django
Requires: pyScss
BuildRequires : Django
BuildRequires : Django-python
BuildRequires : Pillow-python
BuildRequires : buildreq-distutils3
BuildRequires : django-appconf-python
BuildRequires : django-discover-runner-python
BuildRequires : django_compressor-python
BuildRequires : funcsigs-python
BuildRequires : pathlib-python
BuildRequires : pyScss
BuildRequires : pyScss-python
BuildRequires : python-mock-python
BuildRequires : six
BuildRequires : six-python

%description
django-pyscss
-------------

A collection of tools for making it easier to use pyScss within Django.

.. image:: https://travis-ci.org/fusionbox/django-pyscss.png
   :target: http://travis-ci.org/fusionbox/django-pyscss
   :alt: Build Status

.. image:: https://coveralls.io/repos/fusionbox/django-pyscss/badge.png?branch=master
   :target: https://coveralls.io/r/fusionbox/django-pyscss
   :alt: Coverage Status


.. note::

    This version only supports pyScss 1.3.4 and greater. For pyScss 1.2 support,
    you can use the 1.x series of django-pyscss.


Installation
============

django-pyscss supports Django 1.4+, and Pythons 2 and 3.

You may install django-pyscss off of PyPI::

    pip install django-pyscss


Why do we need this?
====================

This app smooths over a lot of things when dealing with pyScss in Django.  It

- Overwrites the import system to use Django's staticfiles app.  This way you
  can import SCSS files from any app (or any file that's findable by the
  STATICFILES_FINDERS) with no hassle.

- Configures pyScss to work with the staticfiles app for its image functions
  (e.g. inline-image and sprite-map).

- It provides a django-compressor precompile filter class so that you can
  easily use pyScss with django-compressor without having to bust out to the
  shell.  This has the added benefit of removing the need to configure pyScss
  through its command-line arguments AND makes it possible for the exceptions
  and warnings that pyScss emits to bubble up to your process so that you can
  actually know what's going on.


Rendering SCSS manually
=======================

You can render SCSS manually from a string like this:

.. code-block:: python

    from django_pyscss import DjangoScssCompiler

    compiler = DjangoScssCompiler()
    compiler.compile_string(".foo { color: green; }")

You can render SCSS from a file like this:

.. code-block:: python

    from django_pyscss import DjangoScssCompiler

    compiler = DjangoScssCompiler()
    compiler.compile('css/styles.scss')

The file needs to be able to be located by staticfiles finders in order to be
used.

The ``DjangoScssCompiler`` class is a subclass of ``scss.Compiler`` that
injects the ``DjangoExtension``. ``DjangoExtension`` is what overrides the
import mechanism.

``DjangoScssCompiler`` also turns on the CompassExtension by default, if you
wish to turn this off you do so:

.. code-block:: python

    from django_pyscss import DjangoScssCompiler
    from django_pyscss.extensions.django import DjangoExtension

    compiler = DjangoScssCompiler(extensions=[DjangoExtension])

For a list of options that ``DjangoScssCompiler`` accepts, please see the
pyScss `API documentation <http://pyscss.readthedocs.org/en/latest/python-api.html#new-api>`_.


Using in conjunction with django-compressor
===========================================

django-pyscss comes with support for django-compressor.  All you have to do is
add it to your ``COMPRESS_PRECOMPILERS`` setting. :

.. code-block:: python

    COMPRESS_PRECOMPILERS = (
        # ...
        ('text/x-scss', 'django_pyscss.compressor.DjangoScssFilter'),
        # ...
    )

Then you can just use SCSS like you would use CSS normally. :

.. code-block:: html+django

    {% compress css %}
    <link rel="stylesheet" type="text/x-scss" href="{% static 'css/styles.css' %}">
    {% endcompress %}

If you wish to provide your own compiler instance (for example if you wanted to
change some settings on the ``DjangoScssCompiler``), you can subclass
``DjangoScssFilter``. :

.. code-block:: python

    # myproject/scss_filter.py
    from django_pyscss import DjangoScssCompiler
    from django_pyscss.compressor import DjangoScssFilter

    class MyDjangoScssFilter(DjangoScssFilter):
        compiler = DjangoScssCompiler(
            # Example configuration
            output_style='compressed',
        )

    # settings.py
    COMPRESS_PRECOMPILERS = (
        # ...
        ('text/x-scss', 'myproject.scss_filter.MyDjangoScssFilter'),
        # ...
    )


Running the tests
=================

You can run the tests by running.

    $ python setup.py test

Please note that this will collecstatic into ``tmp/static/`` automatically as
some of the tests require the staticfiles to have been collected.


CHANGELOG
---------


2.0.2 (2015-04-29)
==================

- Fixed bug with relative imports [#34, #35 r1chardj0n3s]


2.0.1 (2015-04-23)
==================

- Explicitly depend on pathlib, instead of assuming pyScss will require it. [#33]
- Fixed cases where DEBUG is False but collectstatic hasn't been run (common in tests).


2.0.0 (2015-04-22)
==================

- Added support for pyScss 1.3 and Python 3.
- Dropped support for pyScss 1.2

Upgrade path
^^^^^^^^^^^^

If you are just using the django-compressor integration, you don't have to
upgrade anything.

If you were using the ``DjangoScss`` class directly, it has been replaced with
the ``DjangoScssCompiler`` class. The API for compiling CSS has changed as
well, for example, to compile from a string, previously you would do it like
this:

.. code-block:: python

    >>> from django_pyscss.scss import DjangoScss
    >>> compiler = DjangoScss()
    >>> compiler.compile(".foo { color: red; }")

Now the interface is like this:

.. code-block:: python

    >>> from django_pyscss import DjangoScssCompiler
    >>> compiler = DjangoScssCompiler()
    >>> compiler.compile_string(".foo { color: red; }")

You read more about the new API on the `pyScss API documentation
<http://pyscss.readthedocs.org/en/latest/python-api.html#new-api>`_.


1.0.0 - 2014-02-11
==================

Released django-pyscss.

%package license
Summary: license components for the django-pyscss package.
Group: Default

%description license
license components for the django-pyscss package.


%package python
Summary: python components for the django-pyscss package.
Group: Default
Requires: django-pyscss-python3 = %{version}-%{release}

%description python
python components for the django-pyscss package.


%package python3
Summary: python3 components for the django-pyscss package.
Group: Default
Requires: python3-core
Provides: pypi(django-pyscss)

%description python3
python3 components for the django-pyscss package.


%prep
%setup -q -n django-pyscss-2.0.2
cd %{_builddir}/django-pyscss-2.0.2

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1582918247
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$CFLAGS -fno-lto "
export FFLAGS="$CFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%check
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
py.test-2.7 --verbose || : ; py.test-3.4 --verbose || :
%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/django-pyscss
cp %{_builddir}/django-pyscss-2.0.2/LICENSE %{buildroot}/usr/share/package-licenses/django-pyscss/09032647465ef808c0e5503092f5fa338baa62ad
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/django-pyscss/09032647465ef808c0e5503092f5fa338baa62ad

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
